extend type Mutation {
  signIn(account: String, email: String, password: String!, uuid: String): User! @field(resolver: "App\\User@signIn")
  signOut(user_id: ID!): User @field(resolver: "App\\User@signOut")
  autoSignIn(uuid: String!, phone: String): User @field(resolver: "App\\User@autoSignIn")
  destoryUser: Boolean @field(resolver: "App\\User@destoryUserByToken")
  bindDongdezhuan(account: String!, password: String!): Boolean @field(resolver: "App\\User@bindDongdezhuan")
  signUp(account: String, email: String!, password: String!, name: String, uuid: String): User! @field(resolver: "App\\User@signUp")
}

enum RewardType {
  DOUYIN @enum(value: "douyin")
  VIDEO @enum(value: "newUser")
}

# test
extend type Mutation {
  blockUser(user_id: Int!): blockInfo @field(resolver: "App\\User@removeBlockUser")
  updateUserInfo(id: Int @eq, input: updateUserInfo! @spread): User! @field(resolver: "App\\User@updateUserInfo")
}

input updateUserInfo {
  name: String
  age: Int
  gender: String
  email: String
  phone: String
  introduction: String
  password: String @bcrypt
  avatar: String
  birthday: String
}
